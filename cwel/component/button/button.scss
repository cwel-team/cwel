////
/// @group _button.scss
/// @since 0.0.1
////

/// 1. removes focus around text in the button tag firefox

button {
    width: 100%;
    color: $c_secondary;
    font-family: inherit;
    font-size: inherit;
    background-color: transparent;
    outline: none;
    border: none;

    &:focus { outline: none; }
    &::-moz-focus-inner { border: 0; } // 1

    @include breakpoint('md') { width: auto; }
}

/// 1. Show no outline as the focus style is defined on the border
/// 2. Inline-flex on medium and above so the button doesn't go full-width but keeps the properties of flex

.button {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 56px; // stylelint-disable-line
    min-width: 300px; // stylelint-disable-line
    max-width: 100%;
    padding-right: $s_lg;
    padding-left: $s_lg;
    overflow: hidden;
    color: $c_button_color_1;
    text-decoration: none;
    background-color: $c_button_bg_1;
    outline: none; // 1
    border: none;
    border-radius: 5rem;
    transition: all 0.2s ease-in-out;
    cursor: pointer;

    @include breakpoint('md') {
        display: inline-flex; // 2
        min-width: auto;
        padding-right: $s_md;
        padding-left: $s_md;
    }

    &:focus {
        box-shadow: 0 0 0.4rem 0.1rem $c_focus;
        border-width: 0.2rem;
        border-style: solid;
        border-color: $c_focus;
    }
    @include hover-effect($c_button_onLight_hover_bg_1);
}

.button--icon-only {
    width: 56px; // stylelint-disable-line
    min-width: 56px; // stylelint-disable-line
    padding: 0;
}

/// 1. Max-width is calculated as max-width of the whole button minus the spacers, 320px - 64px = 256px or 25.6rem

.button__text {
    position: relative;
    order: 2;
    max-width: 100%;
    overflow: hidden;
    font-weight: 600;
    text-overflow: ellipsis;
    white-space: nowrap;
    outline: none;
    pointer-events: none;

    @include breakpoint('md') {
        max-width: $s_lg * 5 - $s_md * 2; // 1
    }

    .button--icon-only & {
        display: none;
    }
}

.button__icon {
    position: relative;
    height: 2rem;
    pointer-events: none;

    .button--icon-right & {
        order: 3;
        margin-left: $s_sm;
    }

    .button--icon-left & {
        order: 1;
        margin-right: $s_sm;
    }
}

.button--secondary {
    color: $c_button_color_2;
    background-color: $c_button_bg_2;
    @include hover-effect($c_button_onLight_hover_bg_2);
}
.button--on-dark {
    color: $c_button_onDark_color_1;
    background-color: $c_button_onDark_bg_1;
    @include hover-effect($c_button_onDark_hover_bg_1);

    &.button--secondary {
        color: $c_button_onDark_color_2;
        background-color: $c_button_onDark_bg_2;
        border-width: 0.2rem;
        border-style: solid;
        border-color: $c_button_onDark_color_2;
        @include hover-effect($c_button_onDark_hover_bg_2);
    }
}
.button--on-light {
    color: $c_button_onLight_color_1;
    background-color: $c_button_onLight_bg_1;
    @include hover-effect($c_button_onLight_hover_bg_1);

    &.button--secondary {
        color: $c_button_onLight_color_2;
        background-color: $c_button_onLight_bg_2;
        @include hover-effect($c_button_onLight_hover_bg_2);
    }
}

