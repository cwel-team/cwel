# http://galenframework.com/docs/reference-galen-spec-language-guide/#Objectdefinition

@objects

    sizes                                       .section--sizes
        grid_1                                  .grid:nth-of-type(1)
            grid_cell                           .grid__cell
        grid_2                                  .grid:nth-of-type(2)
            grid_cell-*                         .grid__cell
        grid_3                                  .grid:nth-of-type(3)
            grid_cell-*                         .grid__cell
        grid_4                                  .grid:nth-of-type(4)
            grid_cell                           .grid__cell
        grid_5                                  .grid:nth-of-type(5)
            grid_cell-*                         .grid__cell
        grid_6                                  .grid:nth-of-type(6)
            grid_cell-*                         .grid__cell


    size_combinations                           .section--size-combinations
        grid-1                                  .grid:nth-of-type(1)
            grid_cell_quarter                   .grid__cell:nth-of-type(1)
            grid_cell_three_quarters            .grid__cell:nth-of-type(2)
        grid-2                                  .grid:nth-of-type(2)
            grid_cell_half                      .grid__cell:nth-of-type(1)
            grid_cell_quarter                   .grid__cell:nth-of-type(2)
            grid_cell_twelfth-*                 .grid__cell:nth-of-type(n+3)
        grid-3                                  .grid:nth-of-type(3)
            grid_cell_two_thirds                .grid__cell:nth-of-type(1)
            grid_cell_third                     .grid__cell:nth-of-type(2)
        grid-4                                  .grid:nth-of-type(4)
            grid_cell_half                      .grid__cell:nth-of-type(1)
            grid_cell_sixth-*                   .grid__cell:nth-of-type(n+2)


    nested_grids                                .section--nested-grids
        grid-1                                  .grid:nth-of-type(1)
            grid_cell_half-1                    .grid__cell:nth-of-type(1)
            grid_cell_half-2                    .grid__cell:nth-of-type(2)
                grid-1-1                        .grid .grid__cell .block .grid
                    grid_cell_third             .grid__cell:nth-of-type(1)
                    grid_cell_two_thirds        .grid__cell:nth-of-type(2)
                        grid-1-2                .block .grid
                            grid_cell_half-*    .grid__cell:nth-of-type(-n+2)
                            grid_cell_third-*   .grid__cell:nth-of-type(n+3)



    equal_height                                .section--equal-height
        grid-1                                  .grid:nth-of-type(1)
            grid_cell-*                         .grid__cell


    horizontal_alignment                        .section--horizontal-alignment
        grid-1                                  .grid:nth-of-type(1)
            grid_cell                           .grid__cell
        grid-2                                  .grid:nth-of-type(2)
            grid_cell                           .grid__cell
        grid-3                                  .grid:nth-of-type(3)
            grid_cell                           .grid__cell


    top_alignment                               .section--top-alignment
        grid-1                                  .grid:nth-of-type(1)
            grid_cell-*                         .grid__cell


    middle_alignment                            .section--middle-alignment
        grid-1                                  .grid:nth-of-type(1)
            grid_cell-*                         .grid__cell


    bottom_alignment                            .section--bottom-alignment
        grid-1                                  .grid:nth-of-type(1)
            grid_cell-*                         .grid__cell


    independent_alignment                       .section--independent-alignment
        grid-1                                  .grid:nth-of-type(1)
            grid_cell-1                         .grid__cell:nth-of-type(1)
            grid_cell-3                         .grid__cell:nth-of-type(3)
            grid_cell-4                         .grid__cell:nth-of-type(4)


    reversed                                    .section--reversed
        grid-1                                  .grid:nth-of-type(1)
            grid_cell-1                         .grid__cell:nth-of-type(1)
            grid_cell-2                         .grid__cell:nth-of-type(2)
            grid_cell-3                         .grid__cell:nth-of-type(3)
            grid_cell-4                         .grid__cell:nth-of-type(4)


    flush                                       .section--flush
        grid-1                                  .grid:nth-of-type(1)
            grid_cell-1                         .grid__cell:nth-of-type(1)
                block                           .block
            grid_cell-2                         .grid__cell:nth-of-type(2)
                block                           .block
            grid_cell-3                         .grid__cell:nth-of-type(3)
                block                           .block
            grid_cell-4                         .grid__cell:nth-of-type(4)
                block                           .block


# http://galenframework.com/docs/reference-galen-spec-language-guide/#SpecsReference

= Sizes =

    = Grid 1 =
    @on *
        sizes.grid_1.grid_cell:
            centered horizontally inside sizes.grid_1
            width 100 % of sizes.grid_1/width

    = Grid 2 =
    @on *
        sizes.grid_2.grid_cell-*:
            aligned horizontally top sizes.grid_2
            width 50 % of sizes.grid_2/width

    = Grid 3 =
    @on *
        sizes.grid_3.grid_cell-*:
            aligned horizontally top sizes.grid_3
            width ~ 33 % of sizes.grid_3/width

    = Grid 4 =
    @on *
        sizes.grid_4.grid_cell-*:
            aligned horizontally top sizes.grid_4
            width 25 % of sizes.grid_4/width

    = Grid 5 =
    @on *
        sizes.grid_5.grid_cell-*:
            aligned horizontally top sizes.grid_5
            width ~ 16.6 % of sizes.grid_5/width

    = Grid 6 =
    @on *
        sizes.grid_6.grid_cell-*:
            aligned horizontally top sizes.grid_6
            width ~ 8.3 % of sizes.grid_6/width

= Size Combinations =

    = Grid 1 =
    @on *
        size_combinations.grid-1.grid_cell_quarter:
            aligned horizontally top size_combinations.grid-1
            width 25 % of size_combinations.grid-1/width

        size_combinations.grid-1.grid_cell_three_quarters:
            aligned horizontally top size_combinations.grid-1
            width 75 % of size_combinations.grid-1/width

    = Grid 2 =
    @on *
        size_combinations.grid-2.grid_cell_half:
            aligned horizontally top size_combinations.grid-2
            width 50 % of size_combinations.grid-2/width

        size_combinations.grid-2.grid_cell_quarter:
            aligned horizontally top size_combinations.grid-2
            width 25 % of size_combinations.grid-2/width

        size_combinations.grid-2.grid_cell_twelfth-*:
            aligned horizontally top size_combinations.grid-2
            width ~ 8.3 % of size_combinations.grid-2/width

    = Grid 3 =
    @on *
        size_combinations.grid-3.grid_cell_two_thirds:
            aligned horizontally top size_combinations.grid-3
            width ~ 67 % of size_combinations.grid-3/width

        size_combinations.grid-3.grid_cell_third:
            aligned horizontally top size_combinations.grid-3
            width ~ 33 % of size_combinations.grid-3/width

    = Grid 4 =
    @on *
        size_combinations.grid-4.grid_cell_half:
            aligned horizontally top size_combinations.grid-4
            width 50 % of size_combinations.grid-4/width

        size_combinations.grid-4.grid_cell_sixth-*:
            aligned horizontally top size_combinations.grid-4
            width ~ 16.6 % of size_combinations.grid-4/width

= Nested Grids =

    = Grid 1 =
    @on *
        nested_grids.grid-1.grid_cell_half-1:
            aligned horizontally top nested_grids.grid-1
            width 50 % of nested_grids.grid-1/width

        nested_grids.grid-1.grid_cell_half-2:
            aligned horizontally top nested_grids.grid-1
            width 50 % of nested_grids.grid-1/width

    = Grid 1-1 =
    @on *
        nested_grids.grid-1.grid_cell_half-2.grid-1-1:
            aligned horizontally top nested_grids.grid-1
            width 100 % of nested_grids.grid-1.grid_cell_half-2/width

        nested_grids.grid-1.grid_cell_half-2.grid-1-1.grid_cell_third:
            aligned horizontally top nested_grids.grid-1
            width ~ 33 % of nested_grids.grid-1.grid_cell_half-2.grid-1-1/width

        nested_grids.grid-1.grid_cell_half-2.grid-1-1.grid_cell_two_thirds:
            aligned horizontally top nested_grids.grid-1
            width ~ 67 % of nested_grids.grid-1.grid_cell_half-2.grid-1-1/width

    = Grid 1-2 =
    @on *
        nested_grids.grid-1.grid_cell_half-2.grid-1-1.grid_cell_two_thirds.grid-1-2:
            aligned horizontally top nested_grids.grid-1
            width 100 % of nested_grids.grid-1.grid_cell_half-2.grid-1-1.grid_cell_two_thirds/width

        nested_grids.grid-1.grid_cell_half-2.grid-1-1.grid_cell_two_thirds.grid-1-2.grid_cell_half-*:
            width 50 % of nested_grids.grid-1.grid_cell_half-2.grid-1-1.grid_cell_two_thirds.grid-1-2/width

        nested_grids.grid-1.grid_cell_half-2.grid-1-1.grid_cell_two_thirds.grid-1-2.grid_cell_third-*:
            width ~ 33 % of nested_grids.grid-1.grid_cell_half-2.grid-1-1.grid_cell_two_thirds.grid-1-2/width

= Equal Height =

    = Grid 1 =
    @on *
        equal_height.grid-1.grid_cell-*:
            height 100 % of equal_height.grid-1/height

= Horizontal Alignment =

# Extra `1px` is added to `Grid 2` and `Grid 3` to prevent rounding errors

    = Grid 1 =
    @on *
        horizontal_alignment.grid-1:
            css justify-content is "flex-start"

        horizontal_alignment.grid-1.grid_cell:
            aligned vertically left horizontal_alignment.grid-1

    = Grid 2 =
    @on *
        horizontal_alignment.grid-2:
            css justify-content is "center"

        horizontal_alignment.grid-2.grid_cell:
            aligned vertically centered horizontal_alignment.grid-2 1px

    = Grid 3 =
    @on *
        horizontal_alignment.grid-3:
            css justify-content is "flex-end"

        horizontal_alignment.grid-3.grid_cell:
            aligned vertically right horizontal_alignment.grid-3 1px

= Top Alignment =

    = Grid 1 =
    @on *
        top_alignment.grid-1:
            css align-items is "flex-start"

        top_alignment.grid-1.grid_cell-*:
            aligned horizontally top top_alignment.grid-1

= Middle Alignment =

    = Grid 1 =
    @on *
        middle_alignment.grid-1:
            css align-items is "center"

        middle_alignment.grid-1.grid_cell-*:
            aligned horizontally centered middle_alignment.grid-1

= Bottom Alignment =

    = Grid 1 =
    @on *
        bottom_alignment.grid-1:
            css align-items is "flex-end"

        bottom_alignment.grid-1.grid_cell-*:
            aligned horizontally bottom bottom_alignment.grid-1

= Independent Alignment =

    = Grid 1 =
    @on *
        independent_alignment.grid-1.grid_cell-1:
            css align-self is "flex-start"
            aligned horizontally top independent_alignment.grid-1

        independent_alignment.grid-1.grid_cell-3:
            css align-self is "center"
            aligned horizontally centered independent_alignment.grid-1

        independent_alignment.grid-1.grid_cell-4:
            css align-self is "flex-end"
            aligned horizontally bottom independent_alignment.grid-1

= Reveresed =

    = Grid 1 =

    # Extra `-1px` is added to `reversed.grid-1.grid_cell-4` to prevent rounding errors

    @on *
        reversed.grid-1:
            css flex-direction is "row-reverse"
        reversed.grid-1.grid_cell-1:
            aligned vertically right reversed.grid-1
        reversed.grid-1.grid_cell-2:
            left-of reversed.grid-1.grid_cell-1
        reversed.grid-1.grid_cell-3:
            left-of reversed.grid-1.grid_cell-2
        reversed.grid-1.grid_cell-4:
            left-of reversed.grid-1.grid_cell-3 -1px

= Flush =

    = Grid 1 =
    @on *
        @for [1 - 4] as index
            flush.grid-1.grid_cell-${index}.block:
                aligned horizontally top flush.grid-1
                width 25 % of flush.grid-1/width
