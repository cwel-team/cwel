[{"description":"1. Declare global box-sizing\n","commentRange":{"start":24,"end":24},"context":{"type":"css","name":"*,\n*::before,\n*::after","value":"box-sizing: border-box; // 1","line":{"start":28,"end":102}},"group":["_reset.scss"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Component\\_reset.scss","name":"_reset.scss"}},{"description":"1. Never scroll the document horizontally\n2. Always include a vertical scrollbar to avoid jumps when dynamic content causes the page to grow beyond the viewport height\n3. Correct the line height in all browsers\n4. Prevent adjustments to font size after orientation changes on iOS\n5. Prevent adjustments to font size after orientation changes in IE on Windows Phone\n","commentRange":{"start":32,"end":36},"context":{"type":"css","name":"html","value":"overflow-x: hidden; // 1\n    overflow-y: scroll; // 2\n    line-height: 1.15;  // 3\n    -webkit-text-size-adjust: 100%; // 4\n    -ms-text-size-adjust: 100%; // 5","line":{"start":38,"end":102}},"group":["_reset.scss"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Component\\_reset.scss","name":"_reset.scss"}},{"description":"1. Prevent a white band at the bottom of pages when content is less than the viewport height\n","commentRange":{"start":46,"end":46},"context":{"type":"css","name":"body,\nhtml","value":"min-height: 100%; // 1","line":{"start":49,"end":102}},"group":["_reset.scss"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Component\\_reset.scss","name":"_reset.scss"}},{"description":"\n","commentRange":{"start":53,"end":53},"context":{"type":"css","name":"body","value":"margin: 0;\n    font-family: 'Poppins', sans-serif;","line":{"start":55,"end":102}},"group":["_reset.scss"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Component\\_reset.scss","name":"_reset.scss"}},{"description":"1. Add the correct display type in LTE IE 9\n","commentRange":{"start":60,"end":60},"context":{"type":"css","name":"article,\naside,\nfigcaption,\nfigure,\nfooter,\nheader,\nmain,\nnav,\nsection","value":"display: block; // 1","line":{"start":70,"end":102}},"group":["_reset.scss"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Component\\_reset.scss","name":"_reset.scss"}},{"description":"1. Remove the inheritance of text transform in Firefox\n","commentRange":{"start":74,"end":74},"context":{"type":"css","name":"button,\nselect","value":"text-transform: none; // 1","line":{"start":77,"end":102}},"group":["_reset.scss"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Component\\_reset.scss","name":"_reset.scss"}},{"description":"1. Prevent a WebKit bug where the following rule destroys native `audio` and `video` controls in Android 4\n2. Correct the inability to style clickable types in iOS and Safari\n","commentRange":{"start":81,"end":82},"context":{"type":"css","name":"button,\nhtml [type='button'], // 1\n[type='reset'],\n[type='submit']","value":"-webkit-appearance: none; // 2","line":{"start":87,"end":102}},"group":["_reset.scss"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Component\\_reset.scss","name":"_reset.scss"}},{"description":"1. Add the correct display in IE\n","commentRange":{"start":91,"end":91},"context":{"type":"css","name":"template","value":"display: none; // 1","line":{"start":93,"end":102}},"group":["_reset.scss"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Component\\_reset.scss","name":"_reset.scss"}},{"description":"1. Add the correct display in LTE IE 10\n","commentRange":{"start":97,"end":97},"context":{"type":"css","name":"[hidden]","value":"display: none; // 1","line":{"start":99,"end":102}},"group":["_reset.scss"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Component\\_reset.scss","name":"_reset.scss"}},{"description":"1. Remove the grey background on active links in IE 10\n2. Remove gaps in links underline in iOS GTE 8 and Safari GTE 8\n","commentRange":{"start":6,"end":7},"context":{"type":"css","name":"a","value":"background-color: transparent; // 1\n    -webkit-text-decoration-skip: objects; // 2","line":{"start":9,"end":95}},"group":["_typography.scss"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Component\\_typography.scss","name":"_typography.scss"}},{"description":"1. Prevent `sub` and `sup` elements from affecting the line height in all browsers\n","commentRange":{"start":14,"end":14},"context":{"type":"css","name":"sub,\nsup","value":"position: relative;\n    vertical-align: baseline;\n    font-size: 75%;\n    line-height: 0; // 1","line":{"start":17,"end":95}},"group":["_typography.scss"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Component\\_typography.scss","name":"_typography.scss"}},{"description":"1. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari\n2. Remove the bottom border in Chrome LTE 57 and Firefox LTE 39\n","commentRange":{"start":32,"end":33},"context":{"type":"css","name":"abbr[title]","value":"text-decoration: underline; // 1\n    text-decoration: underline double; // 1\n    border-bottom: none; // 2","line":{"start":35,"end":95}},"group":["_typography.scss"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Component\\_typography.scss","name":"_typography.scss"}},{"description":"Correct the odd `em` font sizing in all browsers\n","commentRange":{"start":41,"end":41},"context":{"type":"css","name":"pre","value":"font-family: monospace;\n    font-size: 1em; // stylelint-disable-line declaration-property-unit-blacklist, unit-whitelist","line":{"start":43,"end":95}},"group":["_typography.scss"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Component\\_typography.scss","name":"_typography.scss"}},{"description":"1. Add the correct font style in Android LTE 4.3\n","commentRange":{"start":48,"end":48},"context":{"type":"css","name":"dfn","value":"font-style: italic; // 1","line":{"start":50,"end":95}},"group":["_typography.scss"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Component\\_typography.scss","name":"_typography.scss"}},{"description":"1. Add the correct color in LTE IE 9\n2. Add the background color in LTE IE 9\n","commentRange":{"start":54,"end":55},"context":{"type":"css","name":"mark","value":"color: #000; // 1\n    background-color: #ff0; // 2","line":{"start":57,"end":95}},"group":["_typography.scss"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Component\\_typography.scss","name":"_typography.scss"}},{"description":"Add the correct font weight in Chrome, Edge, and Safari\n","commentRange":{"start":66,"end":66},"context":{"type":"css","name":"b,\nstrong","value":"font-weight: bolder; // stylelint-disable-line font-weight-notation","line":{"start":69,"end":95}},"group":["_typography.scss"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Component\\_typography.scss","name":"_typography.scss"}},{"description":"1. Add the correct font size in all browsers\n","commentRange":{"start":73,"end":73},"context":{"type":"css","name":"small","value":"font-size: 80%; // 1","line":{"start":75,"end":95}},"group":["_typography.scss"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Component\\_typography.scss","name":"_typography.scss"}},{"description":"1. Add the correct box sizing in Firefox\n2. Show the overflow in Edge and IE\n","commentRange":{"start":83,"end":84},"context":{"type":"css","name":"hr","value":"box-sizing: content-box; // 1\n    height: 0; // 1\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    overflow: visible; // 2\n    border: none;\n    border-top: 1px solid #999; // stylelint-disable-line declaration-property-unit-blacklist","line":{"start":86,"end":95}},"group":["_typography.scss"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Component\\_typography.scss","name":"_typography.scss"}},{"description":"","commentRange":{"start":28,"end":28},"context":{"type":"function","name":"grid-cell-size","code":"\n    @return ($n / 12) * 100%;\n","line":{"start":30,"end":32}},"group":["functions"],"since":[{"version":"0.0.1"}],"access":"public","require":[],"file":{"path":"Mixin\\_mxn-grid.scss","name":"_mxn-grid.scss"},"usedBy":[{"description":"\n","context":{"type":"mixin","name":"grid-cell-width","code":"\n    flex-basis: grid-cell-size($width);\n    max-width: grid-cell-size($width);\n","line":{"start":43,"end":46}}},{"description":"\n","context":{"type":"mixin","name":"grid-cell-width","code":"\n    flex-basis: grid-cell-size($width);\n    max-width: grid-cell-size($width);\n","line":{"start":43,"end":46}}}]},{"description":"Aspect ratio\n","commentRange":{"start":6,"end":9},"context":{"type":"mixin","name":"aspect-ratio","code":"\n    width: 100%;\n    height: 0;\n    padding-bottom: 100% / $ratio;\n","line":{"start":11,"end":15}},"example":[{"type":"scss","code":"aspect-ratio(50);"}],"parameter":[{"type":"int","name":"ratio","description":"Percentage of element's width that should be applied to element's height (0 - 100)"}],"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","require":[],"file":{"path":"Mixin\\_mxn-aspect-ratio.scss","name":"_mxn-aspect-ratio.scss"}},{"description":"\n","commentRange":{"start":6,"end":6},"context":{"type":"mixin","name":"container","code":"\n    display: block;\n    max-width: 1000px;\n    margin: auto;\n    padding-right: $CONTAINER-MARGIN-XS;\n    padding-left: $CONTAINER-MARGIN-XS;\n\n    @each $device-size in map-keys($BREAKPOINTS) {\n        $width: map-get($CONTAINER, 'width-#{$device-size}');\n        $margin: map-get($CONTAINER, 'margin-#{$device-size}');\n\n        @include breakpoint($device-size) {\n            @if ($width != null) {\n                max-width: $width;\n            }\n            @if ($margin != null) {\n                padding-right: $margin;\n                padding-left: $margin;\n            }\n        }\n    }\n","line":{"start":8,"end":29}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","require":[{"type":"mixin","name":"breakpoint"},{"type":"variable","name":"CONTAINER-MARGIN-XS"},{"type":"variable","name":"CONTAINER-MARGIN-XS"},{"type":"variable","name":"BREAKPOINTS"},{"type":"variable","name":"CONTAINER"},{"type":"variable","name":"CONTAINER"}],"file":{"path":"Mixin\\_mxn-container.scss","name":"_mxn-container.scss"},"usedBy":[{"description":"\n","context":{"type":"mixin","name":"generate-container-classes","code":"\n    .container {\n        @include container;\n    }\n    .container--fluid {\n        @include fluid-container;\n    }\n","line":{"start":53,"end":60}}}]},{"description":"\n","commentRange":{"start":31,"end":31},"context":{"type":"mixin","name":"fluid-container","code":"\n    display: block;\n    margin: auto;\n    padding-right: $CONTAINER-MARGIN-XS;\n    padding-left: $CONTAINER-MARGIN-XS;\n\n    @each $device-size in map-keys($BREAKPOINTS) {\n        $margin: map-get($CONTAINER, 'margin-#{$device-size}');\n\n        @include breakpoint($device-size) {\n            @if ($margin != null) {\n                padding-right: $margin;\n                padding-left: $margin;\n            }\n        }\n    }\n","line":{"start":33,"end":49}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","require":[{"type":"mixin","name":"breakpoint"},{"type":"variable","name":"CONTAINER-MARGIN-XS"},{"type":"variable","name":"CONTAINER-MARGIN-XS"},{"type":"variable","name":"BREAKPOINTS"},{"type":"variable","name":"CONTAINER"}],"file":{"path":"Mixin\\_mxn-container.scss","name":"_mxn-container.scss"},"usedBy":[{"description":"\n","context":{"type":"mixin","name":"generate-container-classes","code":"\n    .container {\n        @include container;\n    }\n    .container--fluid {\n        @include fluid-container;\n    }\n","line":{"start":53,"end":60}}}]},{"description":"\n","commentRange":{"start":51,"end":51},"context":{"type":"mixin","name":"generate-container-classes","code":"\n    .container {\n        @include container;\n    }\n    .container--fluid {\n        @include fluid-container;\n    }\n","line":{"start":53,"end":60}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","require":[{"type":"mixin","name":"container"},{"type":"mixin","name":"fluid-container"}],"file":{"path":"Mixin\\_mxn-container.scss","name":"_mxn-container.scss"}},{"description":"\n","commentRange":{"start":6,"end":6},"context":{"type":"mixin","name":"breakpoint","code":"\n    $breakpoint: map-get($BREAKPOINTS, $device-size);\n\n    @media(min-width: $breakpoint) {\n        @content;\n    }\n","line":{"start":8,"end":14}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","content":"","require":[{"type":"variable","name":"BREAKPOINTS"}],"file":{"path":"Mixin\\_mxn-device.scss","name":"_mxn-device.scss"},"usedBy":[{"description":"\n","context":{"type":"mixin","name":"container","code":"\n    display: block;\n    max-width: 1000px;\n    margin: auto;\n    padding-right: $CONTAINER-MARGIN-XS;\n    padding-left: $CONTAINER-MARGIN-XS;\n\n    @each $device-size in map-keys($BREAKPOINTS) {\n        $width: map-get($CONTAINER, 'width-#{$device-size}');\n        $margin: map-get($CONTAINER, 'margin-#{$device-size}');\n\n        @include breakpoint($device-size) {\n            @if ($width != null) {\n                max-width: $width;\n            }\n            @if ($margin != null) {\n                padding-right: $margin;\n                padding-left: $margin;\n            }\n        }\n    }\n","line":{"start":8,"end":29}}},{"description":"\n","context":{"type":"mixin","name":"fluid-container","code":"\n    display: block;\n    margin: auto;\n    padding-right: $CONTAINER-MARGIN-XS;\n    padding-left: $CONTAINER-MARGIN-XS;\n\n    @each $device-size in map-keys($BREAKPOINTS) {\n        $margin: map-get($CONTAINER, 'margin-#{$device-size}');\n\n        @include breakpoint($device-size) {\n            @if ($margin != null) {\n                padding-right: $margin;\n                padding-left: $margin;\n            }\n        }\n    }\n","line":{"start":33,"end":49}}}]},{"description":"\n","commentRange":{"start":6,"end":6},"context":{"type":"mixin","name":"grid","code":"\n    $gutter-xs: map-get($grid-settings, 'gutter-xs');\n\n    display: flex;\n    flex-grow: 0;\n    flex-shrink: 0;\n    flex-direction: row;\n    flex-wrap: wrap;\n    margin-left: $gutter-xs * -1;\n\n    @each $key in map-keys($BREAKPOINTS) {\n        $breakpoint: map-get($BREAKPOINTS, $key);\n        $gutter: map-get($grid-settings, 'gutter-#{$key}');\n\n        @media(min-width: $breakpoint) {\n            margin-left: $gutter * -1;\n        }\n    }\n","line":{"start":8,"end":26}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","require":[{"type":"variable","name":"BREAKPOINTS"},{"type":"variable","name":"BREAKPOINTS"}],"file":{"path":"Mixin\\_mxn-grid.scss","name":"_mxn-grid.scss"},"usedBy":[{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}}]},{"description":"\n","commentRange":{"start":34,"end":34},"context":{"type":"mixin","name":"grid-cell-gutter","code":"\n    $gutter: map-get($GRID, 'gutter-#{$device}');\n    padding-left: $gutter;\n","line":{"start":36,"end":39}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","require":[{"type":"variable","name":"GRID"}],"file":{"path":"Mixin\\_mxn-grid.scss","name":"_mxn-grid.scss"},"usedBy":[{"description":"\n","context":{"type":"mixin","name":"grid-cell","code":"\n    $gutter-xs: map-get($grid-settings, 'gutter-xs');\n    $width-xs: map-get($sizing, 'xs') or 12;\n\n    @include grid-cell-box-model;\n    @include grid-cell-width($width-xs);\n    @include grid-cell-gutter('xs');\n\n    @each $key in map-keys($BREAKPOINTS) {\n        $breakpoint: map-get($BREAKPOINTS, $key);\n        $width: map-get($sizing, $key);\n\n        @media(min-width: $breakpoint) {\n            @if ($width != null) {\n                @include grid-cell-width($width);\n            }\n            @include grid-cell-gutter($key);\n        }\n    }\n","line":{"start":57,"end":76}}},{"description":"\n","context":{"type":"mixin","name":"grid-cell","code":"\n    $gutter-xs: map-get($grid-settings, 'gutter-xs');\n    $width-xs: map-get($sizing, 'xs') or 12;\n\n    @include grid-cell-box-model;\n    @include grid-cell-width($width-xs);\n    @include grid-cell-gutter('xs');\n\n    @each $key in map-keys($BREAKPOINTS) {\n        $breakpoint: map-get($BREAKPOINTS, $key);\n        $width: map-get($sizing, $key);\n\n        @media(min-width: $breakpoint) {\n            @if ($width != null) {\n                @include grid-cell-width($width);\n            }\n            @include grid-cell-gutter($key);\n        }\n    }\n","line":{"start":57,"end":76}}},{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}},{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}}]},{"description":"\n","commentRange":{"start":41,"end":41},"context":{"type":"mixin","name":"grid-cell-width","code":"\n    flex-basis: grid-cell-size($width);\n    max-width: grid-cell-size($width);\n","line":{"start":43,"end":46}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","require":[{"type":"function","name":"grid-cell-size"},{"type":"function","name":"grid-cell-size"}],"file":{"path":"Mixin\\_mxn-grid.scss","name":"_mxn-grid.scss"},"usedBy":[{"description":"\n","context":{"type":"mixin","name":"grid-cell","code":"\n    $gutter-xs: map-get($grid-settings, 'gutter-xs');\n    $width-xs: map-get($sizing, 'xs') or 12;\n\n    @include grid-cell-box-model;\n    @include grid-cell-width($width-xs);\n    @include grid-cell-gutter('xs');\n\n    @each $key in map-keys($BREAKPOINTS) {\n        $breakpoint: map-get($BREAKPOINTS, $key);\n        $width: map-get($sizing, $key);\n\n        @media(min-width: $breakpoint) {\n            @if ($width != null) {\n                @include grid-cell-width($width);\n            }\n            @include grid-cell-gutter($key);\n        }\n    }\n","line":{"start":57,"end":76}}},{"description":"\n","context":{"type":"mixin","name":"grid-cell","code":"\n    $gutter-xs: map-get($grid-settings, 'gutter-xs');\n    $width-xs: map-get($sizing, 'xs') or 12;\n\n    @include grid-cell-box-model;\n    @include grid-cell-width($width-xs);\n    @include grid-cell-gutter('xs');\n\n    @each $key in map-keys($BREAKPOINTS) {\n        $breakpoint: map-get($BREAKPOINTS, $key);\n        $width: map-get($sizing, $key);\n\n        @media(min-width: $breakpoint) {\n            @if ($width != null) {\n                @include grid-cell-width($width);\n            }\n            @include grid-cell-gutter($key);\n        }\n    }\n","line":{"start":57,"end":76}}},{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}},{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}},{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}}]},{"description":"\n","commentRange":{"start":48,"end":48},"context":{"type":"mixin","name":"grid-cell-box-model","code":"\n    flex-grow: 0;\n    flex-shrink: 0;\n","line":{"start":50,"end":53}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Mixin\\_mxn-grid.scss","name":"_mxn-grid.scss"},"usedBy":[{"description":"\n","context":{"type":"mixin","name":"grid-cell","code":"\n    $gutter-xs: map-get($grid-settings, 'gutter-xs');\n    $width-xs: map-get($sizing, 'xs') or 12;\n\n    @include grid-cell-box-model;\n    @include grid-cell-width($width-xs);\n    @include grid-cell-gutter('xs');\n\n    @each $key in map-keys($BREAKPOINTS) {\n        $breakpoint: map-get($BREAKPOINTS, $key);\n        $width: map-get($sizing, $key);\n\n        @media(min-width: $breakpoint) {\n            @if ($width != null) {\n                @include grid-cell-width($width);\n            }\n            @include grid-cell-gutter($key);\n        }\n    }\n","line":{"start":57,"end":76}}},{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}}]},{"description":"\n","commentRange":{"start":55,"end":55},"context":{"type":"mixin","name":"grid-cell","code":"\n    $gutter-xs: map-get($grid-settings, 'gutter-xs');\n    $width-xs: map-get($sizing, 'xs') or 12;\n\n    @include grid-cell-box-model;\n    @include grid-cell-width($width-xs);\n    @include grid-cell-gutter('xs');\n\n    @each $key in map-keys($BREAKPOINTS) {\n        $breakpoint: map-get($BREAKPOINTS, $key);\n        $width: map-get($sizing, $key);\n\n        @media(min-width: $breakpoint) {\n            @if ($width != null) {\n                @include grid-cell-width($width);\n            }\n            @include grid-cell-gutter($key);\n        }\n    }\n","line":{"start":57,"end":76}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","require":[{"type":"mixin","name":"grid-cell-box-model"},{"type":"mixin","name":"grid-cell-width"},{"type":"mixin","name":"grid-cell-gutter"},{"type":"mixin","name":"grid-cell-width"},{"type":"mixin","name":"grid-cell-gutter"},{"type":"variable","name":"BREAKPOINTS"},{"type":"variable","name":"BREAKPOINTS"}],"file":{"path":"Mixin\\_mxn-grid.scss","name":"_mxn-grid.scss"}},{"description":"\n","commentRange":{"start":82,"end":82},"context":{"type":"mixin","name":"grid-align","code":"\n    $horizontal: (\n        left: flex-start,\n        center: center,\n        right: flex-end,\n    );\n    $vertical: (\n        top: flex-start,\n        middle: center,\n        bottom: flex-end\n    );\n\n    @if $alignment in $horizontal  {\n        justify-content: map-get($horizontal, $alignment);\n    }\n\n    @if $alignment in $vertical {\n        align-items: map-get($vertical, $alignment);\n    }\n","line":{"start":84,"end":103}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","require":[],"file":{"path":"Mixin\\_mxn-grid.scss","name":"_mxn-grid.scss"},"usedBy":[{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}},{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}},{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}},{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}},{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}},{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}}]},{"description":"\n","commentRange":{"start":105,"end":105},"context":{"type":"mixin","name":"grid-reverse","code":"\n    flex-direction: row-reverse;\n","line":{"start":107,"end":109}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Mixin\\_mxn-grid.scss","name":"_mxn-grid.scss"},"usedBy":[{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}}]},{"description":"\n","commentRange":{"start":111,"end":111},"context":{"type":"mixin","name":"grid-flush","code":"\n    margin-left: 0;\n","line":{"start":113,"end":115}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Mixin\\_mxn-grid.scss","name":"_mxn-grid.scss"},"usedBy":[{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}}]},{"description":"\n","commentRange":{"start":117,"end":117},"context":{"type":"mixin","name":"grid-justify-space-between","code":"\n    justify-content: space-between;\n","line":{"start":119,"end":121}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Mixin\\_mxn-grid.scss","name":"_mxn-grid.scss"},"usedBy":[{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}}]},{"description":"\n","commentRange":{"start":123,"end":123},"context":{"type":"mixin","name":"grid-justify-space-around","code":"\n    justify-content: space-around;\n","line":{"start":125,"end":127}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Mixin\\_mxn-grid.scss","name":"_mxn-grid.scss"},"usedBy":[{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}}]},{"description":"\n","commentRange":{"start":133,"end":133},"context":{"type":"mixin","name":"grid-cell-align","code":"\n    $vertical: (\n        top: flex-start,\n        middle: center,\n        bottom: flex-end\n    );\n\n    @if $alignment in $vertical {\n        align-self: map-get($vertical, $alignment);\n    }\n","line":{"start":135,"end":145}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","require":[],"file":{"path":"Mixin\\_mxn-grid.scss","name":"_mxn-grid.scss"},"usedBy":[{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}},{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}},{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}}]},{"description":"\n","commentRange":{"start":147,"end":147},"context":{"type":"mixin","name":"grid-cell-flush","code":"\n    padding-left: 0;\n","line":{"start":149,"end":151}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Mixin\\_mxn-grid.scss","name":"_mxn-grid.scss"},"usedBy":[{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}}]},{"description":"\n","commentRange":{"start":153,"end":153},"context":{"type":"mixin","name":"grid-cell-fit","code":"\n    flex-grow: 1;\n    max-width: none;\n","line":{"start":155,"end":158}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Mixin\\_mxn-grid.scss","name":"_mxn-grid.scss"}},{"description":"\n","commentRange":{"start":164,"end":164},"context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","require":[{"type":"mixin","name":"grid"},{"type":"mixin","name":"grid-align"},{"type":"mixin","name":"grid-align"},{"type":"mixin","name":"grid-align"},{"type":"mixin","name":"grid-align"},{"type":"mixin","name":"grid-align"},{"type":"mixin","name":"grid-align"},{"type":"mixin","name":"grid-reverse"},{"type":"mixin","name":"grid-flush"},{"type":"mixin","name":"grid-cell-flush"},{"type":"mixin","name":"grid-justify-space-around"},{"type":"mixin","name":"grid-justify-space-between"},{"type":"mixin","name":"grid-cell-box-model"},{"type":"mixin","name":"grid-cell-gutter"},{"type":"mixin","name":"grid-cell-width"},{"type":"mixin","name":"grid-cell-gutter"},{"type":"mixin","name":"grid-cell-align"},{"type":"mixin","name":"grid-cell-align"},{"type":"mixin","name":"grid-cell-align"},{"type":"mixin","name":"grid-cell-width"},{"type":"mixin","name":"grid-cell-width"},{"type":"variable","name":"BREAKPOINTS"},{"type":"variable","name":"BREAKPOINTS"},{"type":"variable","name":"BREAKPOINTS"},{"type":"variable","name":"BREAKPOINTS"}],"file":{"path":"Mixin\\_mxn-grid.scss","name":"_mxn-grid.scss"}},{"description":"\n","commentRange":{"start":6,"end":6},"context":{"type":"mixin","name":"line-height","code":"\n    $font-size: map-get($options, 'font-size');\n    $leading: map-get($options, 'leading');\n\n    line-height: ($leading / $font-size);\n","line":{"start":8,"end":13}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","require":[],"file":{"path":"Mixin\\_mxn-typography.scss","name":"_mxn-typography.scss"},"usedBy":[{"description":"Removes top and bottom padding from a block of text added by `line-height`\n","context":{"type":"mixin","name":"normalized-line-height","code":"\n    $font-size: map-get($options, 'font-size');\n    $leading: map-get($options, 'leading');\n    $leading-compensation: ($leading - $font-size) / 2;\n    $margin-top: -($leading-compensation);\n\n    margin-top: #{$margin-top}rem;\n    margin-bottom: #{$margin-top}rem;\n    @include line-height((\n        font-size: $font-size,\n        leading: $leading\n    ));\n","line":{"start":17,"end":29}}}]},{"description":"Removes top and bottom padding from a block of text added by `line-height`\n","commentRange":{"start":15,"end":15},"context":{"type":"mixin","name":"normalized-line-height","code":"\n    $font-size: map-get($options, 'font-size');\n    $leading: map-get($options, 'leading');\n    $leading-compensation: ($leading - $font-size) / 2;\n    $margin-top: -($leading-compensation);\n\n    margin-top: #{$margin-top}rem;\n    margin-bottom: #{$margin-top}rem;\n    @include line-height((\n        font-size: $font-size,\n        leading: $leading\n    ));\n","line":{"start":17,"end":29}},"group":["mixins"],"since":[{"version":"0.0.1"}],"access":"public","require":[{"type":"mixin","name":"line-height"}],"file":{"path":"Mixin\\_mxn-typography.scss","name":"_mxn-typography.scss"}},{"description":"- Canonical `XXS` space measurement\n- Used verbatim for `M` viewport width breakpoint\n- Figure is smaller for smaller viewport widths and larger for larger viewport widths\n","commentRange":{"start":10,"end":13},"context":{"type":"variable","name":"SPACE-XXS","value":"4px","scope":"private","line":{"start":14,"end":14}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"- Canonical `XS` space measurement\n- Used verbatim for `M` viewport width breakpoint\n- Figure is smaller for smaller viewport widths and larger for larger viewport widths\n","commentRange":{"start":16,"end":19},"context":{"type":"variable","name":"SPACE-XS","value":"8px","scope":"private","line":{"start":20,"end":20}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"- Canonical `S` space measurement\n- Used verbatim for `M` viewport width breakpoint\n- Figure is smaller for smaller viewport widths and larger for larger viewport widths\n","commentRange":{"start":22,"end":25},"context":{"type":"variable","name":"SPACE-S","value":"16px","scope":"private","line":{"start":26,"end":26}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"- Canonical `M` space measurement\n- Used verbatim for `M` viewport width breakpoint\n- Figure is smaller for smaller viewport widths and larger for larger viewport widths\n","commentRange":{"start":28,"end":31},"context":{"type":"variable","name":"SPACE-M","value":"32px","scope":"private","line":{"start":32,"end":32}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"- Canonical `L` space measurement\n- Used verbatim for `M` viewport width breakpoint\n- Figure is smaller for smaller viewport widths and larger for larger viewport widths\n","commentRange":{"start":34,"end":37},"context":{"type":"variable","name":"SPACE-L","value":"64px","scope":"private","line":{"start":38,"end":38}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"- Canonical `XL` space measurement\n- Used verbatim for `M` viewport width breakpoint\n- Figure is smaller for smaller viewport widths and larger for larger viewport widths\n","commentRange":{"start":40,"end":43},"context":{"type":"variable","name":"SPACE-XL","value":"128px","scope":"private","line":{"start":44,"end":44}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"Map used to provide space sizes for the various viewport breakpoints\n","commentRange":{"start":46,"end":47},"context":{"type":"variable","name":"SPACES","value":"(\n    xxs: $SPACE-XXS,\n    xs: $SPACE-XS,\n    s: $SPACE-S,\n    m: $SPACE-M,\n    l: $SPACE-L,\n    xl: $SPACE-XL\n)","scope":"private","line":{"start":48,"end":55}},"type":"Map","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"`S` Breakpoint size measurement\n","commentRange":{"start":61,"end":62},"context":{"type":"variable","name":"BREAKPOINT-S","value":"400px","scope":"private","line":{"start":63,"end":63}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"`M` Breakpoint size measurement\n","commentRange":{"start":65,"end":66},"context":{"type":"variable","name":"BREAKPOINT-M","value":"600px","scope":"private","line":{"start":67,"end":67}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"`L` Breakpoint size measurement\n","commentRange":{"start":69,"end":70},"context":{"type":"variable","name":"BREAKPOINT-L","value":"1004px","scope":"private","line":{"start":71,"end":71}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"`XL` Breakpoint size measurement\n","commentRange":{"start":73,"end":74},"context":{"type":"variable","name":"BREAKPOINT-XL","value":"1280px","scope":"private","line":{"start":75,"end":75}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"Map used to provide breakpoints\n","commentRange":{"start":77,"end":78},"context":{"type":"variable","name":"BREAKPOINTS","value":"(\n    s: $BREAKPOINT-S,\n    m: $BREAKPOINT-M,\n    l: $BREAKPOINT-L,\n    xl: $BREAKPOINT-XL\n)","scope":"private","line":{"start":79,"end":84}},"type":"Map","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"},"usedBy":[{"description":"\n","context":{"type":"mixin","name":"container","code":"\n    display: block;\n    max-width: 1000px;\n    margin: auto;\n    padding-right: $CONTAINER-MARGIN-XS;\n    padding-left: $CONTAINER-MARGIN-XS;\n\n    @each $device-size in map-keys($BREAKPOINTS) {\n        $width: map-get($CONTAINER, 'width-#{$device-size}');\n        $margin: map-get($CONTAINER, 'margin-#{$device-size}');\n\n        @include breakpoint($device-size) {\n            @if ($width != null) {\n                max-width: $width;\n            }\n            @if ($margin != null) {\n                padding-right: $margin;\n                padding-left: $margin;\n            }\n        }\n    }\n","line":{"start":8,"end":29}}},{"description":"\n","context":{"type":"mixin","name":"fluid-container","code":"\n    display: block;\n    margin: auto;\n    padding-right: $CONTAINER-MARGIN-XS;\n    padding-left: $CONTAINER-MARGIN-XS;\n\n    @each $device-size in map-keys($BREAKPOINTS) {\n        $margin: map-get($CONTAINER, 'margin-#{$device-size}');\n\n        @include breakpoint($device-size) {\n            @if ($margin != null) {\n                padding-right: $margin;\n                padding-left: $margin;\n            }\n        }\n    }\n","line":{"start":33,"end":49}}},{"description":"\n","context":{"type":"mixin","name":"breakpoint","code":"\n    $breakpoint: map-get($BREAKPOINTS, $device-size);\n\n    @media(min-width: $breakpoint) {\n        @content;\n    }\n","line":{"start":8,"end":14}}},{"description":"\n","context":{"type":"mixin","name":"grid","code":"\n    $gutter-xs: map-get($grid-settings, 'gutter-xs');\n\n    display: flex;\n    flex-grow: 0;\n    flex-shrink: 0;\n    flex-direction: row;\n    flex-wrap: wrap;\n    margin-left: $gutter-xs * -1;\n\n    @each $key in map-keys($BREAKPOINTS) {\n        $breakpoint: map-get($BREAKPOINTS, $key);\n        $gutter: map-get($grid-settings, 'gutter-#{$key}');\n\n        @media(min-width: $breakpoint) {\n            margin-left: $gutter * -1;\n        }\n    }\n","line":{"start":8,"end":26}}},{"description":"\n","context":{"type":"mixin","name":"grid","code":"\n    $gutter-xs: map-get($grid-settings, 'gutter-xs');\n\n    display: flex;\n    flex-grow: 0;\n    flex-shrink: 0;\n    flex-direction: row;\n    flex-wrap: wrap;\n    margin-left: $gutter-xs * -1;\n\n    @each $key in map-keys($BREAKPOINTS) {\n        $breakpoint: map-get($BREAKPOINTS, $key);\n        $gutter: map-get($grid-settings, 'gutter-#{$key}');\n\n        @media(min-width: $breakpoint) {\n            margin-left: $gutter * -1;\n        }\n    }\n","line":{"start":8,"end":26}}},{"description":"\n","context":{"type":"mixin","name":"grid-cell","code":"\n    $gutter-xs: map-get($grid-settings, 'gutter-xs');\n    $width-xs: map-get($sizing, 'xs') or 12;\n\n    @include grid-cell-box-model;\n    @include grid-cell-width($width-xs);\n    @include grid-cell-gutter('xs');\n\n    @each $key in map-keys($BREAKPOINTS) {\n        $breakpoint: map-get($BREAKPOINTS, $key);\n        $width: map-get($sizing, $key);\n\n        @media(min-width: $breakpoint) {\n            @if ($width != null) {\n                @include grid-cell-width($width);\n            }\n            @include grid-cell-gutter($key);\n        }\n    }\n","line":{"start":57,"end":76}}},{"description":"\n","context":{"type":"mixin","name":"grid-cell","code":"\n    $gutter-xs: map-get($grid-settings, 'gutter-xs');\n    $width-xs: map-get($sizing, 'xs') or 12;\n\n    @include grid-cell-box-model;\n    @include grid-cell-width($width-xs);\n    @include grid-cell-gutter('xs');\n\n    @each $key in map-keys($BREAKPOINTS) {\n        $breakpoint: map-get($BREAKPOINTS, $key);\n        $width: map-get($sizing, $key);\n\n        @media(min-width: $breakpoint) {\n            @if ($width != null) {\n                @include grid-cell-width($width);\n            }\n            @include grid-cell-gutter($key);\n        }\n    }\n","line":{"start":57,"end":76}}},{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}},{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}},{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}},{"description":"\n","context":{"type":"mixin","name":"generate-grid-classes","code":"\n\n    .grid {\n        @include grid();\n    }\n    .grid--align-left {\n        @include grid-align('left');\n    }\n    .grid--align-center {\n        @include grid-align('center');\n    }\n    .grid--align-right {\n        @include grid-align('right');\n    }\n    .grid--align-top {\n        @include grid-align('top');\n    }\n    .grid--align-middle {\n        @include grid-align('middle');\n    }\n    .grid--align-bottom {\n        @include grid-align('bottom');\n    }\n    .grid--reverse {\n        @include grid-reverse;\n    }\n    .grid--flush {\n        @include grid-flush;\n\n        .grid__cell {\n            @include grid-cell-flush;\n        }\n    }\n    .grid--justify-space-around {\n        @include grid-justify-space-around;\n    }\n    .grid--justify-space-between {\n        @include grid-justify-space-between;\n    }\n\n    .grid__cell {\n        @include grid-cell-box-model;\n        @include grid-cell-gutter('xs');\n        @include grid-cell-width(12);\n\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            @media(min-width: $breakpoint) {\n                @include grid-cell-gutter($key);\n            }\n        }\n    }\n\n    .grid__cell--align-top {\n        @include grid-cell-align('top');\n    }\n\n    .grid__cell--align-middle {\n        @include grid-cell-align('middle');\n    }\n\n    .grid__cell--align-bottom {\n        @include grid-cell-align('bottom');\n    }\n\n    @for $i from 1 through 12 {\n        .grid__cell--size-#{$i} {\n            @include grid-cell-width($i);\n        }\n    }\n\n    @for $i from 1 through 12 {\n        @each $key in map-keys($BREAKPOINTS) {\n            $breakpoint: map-get($BREAKPOINTS, $key);\n\n            .grid__cell--size-#{$i}-#{$key} {\n                @media(min-width: $breakpoint) {\n                    @include grid-cell-width($i);\n                }\n            }\n        }\n    }\n","line":{"start":166,"end":249}}}]},{"description":"`L` container width\n","commentRange":{"start":90,"end":91},"context":{"type":"variable","name":"CONTAINER-WIDTH-L","value":"$BREAKPOINT-L","scope":"private","line":{"start":92,"end":92}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"`XL` container width\n","commentRange":{"start":94,"end":95},"context":{"type":"variable","name":"CONTAINER-WIDTH-XL","value":"$BREAKPOINT-XL","scope":"private","line":{"start":96,"end":96}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"`XS` container margin width\n","commentRange":{"start":98,"end":99},"context":{"type":"variable","name":"CONTAINER-MARGIN-XS","value":"$SPACE-XS","scope":"private","line":{"start":100,"end":100}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"},"usedBy":[{"description":"\n","context":{"type":"mixin","name":"container","code":"\n    display: block;\n    max-width: 1000px;\n    margin: auto;\n    padding-right: $CONTAINER-MARGIN-XS;\n    padding-left: $CONTAINER-MARGIN-XS;\n\n    @each $device-size in map-keys($BREAKPOINTS) {\n        $width: map-get($CONTAINER, 'width-#{$device-size}');\n        $margin: map-get($CONTAINER, 'margin-#{$device-size}');\n\n        @include breakpoint($device-size) {\n            @if ($width != null) {\n                max-width: $width;\n            }\n            @if ($margin != null) {\n                padding-right: $margin;\n                padding-left: $margin;\n            }\n        }\n    }\n","line":{"start":8,"end":29}}},{"description":"\n","context":{"type":"mixin","name":"container","code":"\n    display: block;\n    max-width: 1000px;\n    margin: auto;\n    padding-right: $CONTAINER-MARGIN-XS;\n    padding-left: $CONTAINER-MARGIN-XS;\n\n    @each $device-size in map-keys($BREAKPOINTS) {\n        $width: map-get($CONTAINER, 'width-#{$device-size}');\n        $margin: map-get($CONTAINER, 'margin-#{$device-size}');\n\n        @include breakpoint($device-size) {\n            @if ($width != null) {\n                max-width: $width;\n            }\n            @if ($margin != null) {\n                padding-right: $margin;\n                padding-left: $margin;\n            }\n        }\n    }\n","line":{"start":8,"end":29}}},{"description":"\n","context":{"type":"mixin","name":"fluid-container","code":"\n    display: block;\n    margin: auto;\n    padding-right: $CONTAINER-MARGIN-XS;\n    padding-left: $CONTAINER-MARGIN-XS;\n\n    @each $device-size in map-keys($BREAKPOINTS) {\n        $margin: map-get($CONTAINER, 'margin-#{$device-size}');\n\n        @include breakpoint($device-size) {\n            @if ($margin != null) {\n                padding-right: $margin;\n                padding-left: $margin;\n            }\n        }\n    }\n","line":{"start":33,"end":49}}},{"description":"\n","context":{"type":"mixin","name":"fluid-container","code":"\n    display: block;\n    margin: auto;\n    padding-right: $CONTAINER-MARGIN-XS;\n    padding-left: $CONTAINER-MARGIN-XS;\n\n    @each $device-size in map-keys($BREAKPOINTS) {\n        $margin: map-get($CONTAINER, 'margin-#{$device-size}');\n\n        @include breakpoint($device-size) {\n            @if ($margin != null) {\n                padding-right: $margin;\n                padding-left: $margin;\n            }\n        }\n    }\n","line":{"start":33,"end":49}}}]},{"description":"`S` container margin width\n","commentRange":{"start":102,"end":103},"context":{"type":"variable","name":"CONTAINER-MARGIN-S","value":"$SPACE-S","scope":"private","line":{"start":104,"end":104}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"`M` container margin width\n","commentRange":{"start":106,"end":107},"context":{"type":"variable","name":"CONTAINER-MARGIN-M","value":"$SPACE-XS + $SPACE-XXS","scope":"private","line":{"start":108,"end":108}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"`L` container margin width\n","commentRange":{"start":110,"end":111},"context":{"type":"variable","name":"CONTAINER-MARGIN-L","value":"$SPACE-XS + $SPACE-XXS","scope":"private","line":{"start":112,"end":112}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"`XL` container margin width\n","commentRange":{"start":114,"end":115},"context":{"type":"variable","name":"CONTAINER-MARGIN-XL","value":"$SPACE-XS + $SPACE-XXS","scope":"private","line":{"start":116,"end":116}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"Map used to provide container widths and margins\n","commentRange":{"start":118,"end":119},"context":{"type":"variable","name":"CONTAINER","value":"(\n    width-lg: $CONTAINER-WIDTH-L,\n    width-xl: $CONTAINER-WIDTH-XL,\n    margin-xs: $CONTAINER-MARGIN-XS,\n    margin-sm: $CONTAINER-MARGIN-S,\n    margin-md: $CONTAINER-MARGIN-M,\n    margin-lg: $CONTAINER-MARGIN-L,\n    margin-xl: $CONTAINER-MARGIN-XL\n)","scope":"private","line":{"start":120,"end":128}},"type":"Map","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"},"usedBy":[{"description":"\n","context":{"type":"mixin","name":"container","code":"\n    display: block;\n    max-width: 1000px;\n    margin: auto;\n    padding-right: $CONTAINER-MARGIN-XS;\n    padding-left: $CONTAINER-MARGIN-XS;\n\n    @each $device-size in map-keys($BREAKPOINTS) {\n        $width: map-get($CONTAINER, 'width-#{$device-size}');\n        $margin: map-get($CONTAINER, 'margin-#{$device-size}');\n\n        @include breakpoint($device-size) {\n            @if ($width != null) {\n                max-width: $width;\n            }\n            @if ($margin != null) {\n                padding-right: $margin;\n                padding-left: $margin;\n            }\n        }\n    }\n","line":{"start":8,"end":29}}},{"description":"\n","context":{"type":"mixin","name":"container","code":"\n    display: block;\n    max-width: 1000px;\n    margin: auto;\n    padding-right: $CONTAINER-MARGIN-XS;\n    padding-left: $CONTAINER-MARGIN-XS;\n\n    @each $device-size in map-keys($BREAKPOINTS) {\n        $width: map-get($CONTAINER, 'width-#{$device-size}');\n        $margin: map-get($CONTAINER, 'margin-#{$device-size}');\n\n        @include breakpoint($device-size) {\n            @if ($width != null) {\n                max-width: $width;\n            }\n            @if ($margin != null) {\n                padding-right: $margin;\n                padding-left: $margin;\n            }\n        }\n    }\n","line":{"start":8,"end":29}}},{"description":"\n","context":{"type":"mixin","name":"fluid-container","code":"\n    display: block;\n    margin: auto;\n    padding-right: $CONTAINER-MARGIN-XS;\n    padding-left: $CONTAINER-MARGIN-XS;\n\n    @each $device-size in map-keys($BREAKPOINTS) {\n        $margin: map-get($CONTAINER, 'margin-#{$device-size}');\n\n        @include breakpoint($device-size) {\n            @if ($margin != null) {\n                padding-right: $margin;\n                padding-left: $margin;\n            }\n        }\n    }\n","line":{"start":33,"end":49}}}]},{"description":"`XS` grid gutter width\n","commentRange":{"start":134,"end":135},"context":{"type":"variable","name":"GRID-GUTTER-XS","value":"$SPACE-XS","scope":"private","line":{"start":136,"end":136}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"`S` grid gutter width\n","commentRange":{"start":138,"end":139},"context":{"type":"variable","name":"GRID-GUTTER-S","value":"$SPACE-XS","scope":"private","line":{"start":140,"end":140}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"`M` grid gutter width\n","commentRange":{"start":142,"end":143},"context":{"type":"variable","name":"GRID-GUTTER-M","value":"$SPACE-S","scope":"private","line":{"start":144,"end":144}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"`L` grid gutter width\n","commentRange":{"start":146,"end":147},"context":{"type":"variable","name":"GRID-GUTTER-L","value":"$SPACE-S","scope":"private","line":{"start":148,"end":148}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"`XL` grid gutter width\n","commentRange":{"start":150,"end":151},"context":{"type":"variable","name":"GRID-GUTTER-XL","value":"$SPACE-S","scope":"private","line":{"start":152,"end":152}},"type":"String","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"}},{"description":"Map used to provide grid sizes\n","commentRange":{"start":154,"end":155},"context":{"type":"variable","name":"GRID","value":"(\n    gutter-xs: $GRID-GUTTER-XS,\n    gutter-s: $GRID-GUTTER-S,\n    gutter-m: $GRID-GUTTER-M,\n    gutter-l: $GRID-GUTTER-L,\n    gutter-xl: $GRID-GUTTER-XL\n)","scope":"private","line":{"start":156,"end":162}},"type":"Map","group":["variables"],"since":[{"version":"0.0.1"}],"access":"public","file":{"path":"Variable\\_vbl-settings.scss","name":"_vbl-settings.scss"},"usedBy":[{"description":"\n","context":{"type":"mixin","name":"grid-cell-gutter","code":"\n    $gutter: map-get($GRID, 'gutter-#{$device}');\n    padding-left: $gutter;\n","line":{"start":36,"end":39}}}]}]