{"version":3,"sources":["webpack:///webpack/bootstrap 7e986dd33fa9ffe0771d","webpack:///./cwel/service/scroll-animation/scroll-animation.es","webpack:///./node_modules/choreographer-js/dist/index.js","webpack:///./node_modules/choreographer-js/dist/Choreographer.js","webpack:///./node_modules/choreographer-js/dist/Animation.js","webpack:///./node_modules/choreographer-js/dist/defaultAnimations.js","webpack:///./node_modules/choreographer-js/dist/getInjectedTransformString.js"],"names":["Choreographer","require","angular","module","factory","type","style","from","to","unit","getAnimation","range","selector","forEach","push","extend","directive","scope","animate","link","getBoundingClientRect","top","innerHeight","pageYOffset","scrollTop","clientTop","parent","addClass","updateAnimations","document","body","animations","element","on","offsetTop","runAnimationsAt","clearTimeout","setTimeout"],"mappings":"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;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,OAAO;AACvB,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;AAET,oCAAoC;AACpC;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;;AAEH;AACA,CAAC;;AAED,2B;;;;;;;ACvLA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,KAAK;AACnB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO,oCAAoC;AACzD,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,KAAK;AACnB,cAAc,OAAO;AACrB,cAAc,MAAM;AACpB,cAAc,OAAO,oCAAoC;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,gC;;;;;;;ACzElB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4C","file":"scroll-animation.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7e986dd33fa9ffe0771d","const Choreographer = require('choreographer-js');\r\n\r\nangular.module('cwel')\r\n.factory('animationFactory', () => {\r\n    const animations = {\r\n        'no-animation': [\r\n        ],\r\n        'top-right': [\r\n            { type: 'scale', style: 'top', from: 0, to: -2, unit: 'rem' },\r\n            { type: 'scale', style: 'left', from: 0, to: 2, unit: 'rem' },\r\n        ],\r\n        'top-left': [\r\n            { type: 'scale', style: 'top', from: 0, to: -2, unit: 'rem' },\r\n            { type: 'scale', style: 'left', from: 0, to: -2, unit: 'rem' },\r\n        ],\r\n    };\r\n    return {\r\n        getAnimation: (animationName, elm, range) => {\r\n            const animation = animations[animationName];\r\n            if (typeof (animation) !== 'undefined') {\r\n                const fullConfig = [];\r\n                const additionalConfig = { range, selector: elm };\r\n                angular.forEach(animation, (animationSegment) => {\r\n                    fullConfig.push(angular.extend({}, animationSegment, additionalConfig));\r\n                });\r\n                return fullConfig;\r\n            }\r\n            return false;\r\n        },\r\n    };\r\n});\r\n\r\nangular.module('cwel')\r\n.directive('animate', (animationFactory, $window) => {\r\n    return {\r\n        scope: {\r\n            animate: '@',\r\n        },\r\n        link(scope, el) {\r\n            let range;\r\n            let result;\r\n            let resizeTimer;\r\n            const doc = document.body;\r\n\r\n            function calcAnimation() {\r\n                const elm = el[0].getBoundingClientRect().top;\r\n                const windowHeight = $window.innerHeight;\r\n                const scrollTop = $window.pageYOffset || doc.scrollTop;\r\n                const clientTop = doc.clientTop || 0;\r\n\r\n                const top = elm + scrollTop - clientTop; // eslint-disable-line no-mixed-operators\r\n                const negativeTop = scrollTop - elm;\r\n\r\n                if (top < windowHeight) {\r\n                    range = [negativeTop / elm, top];\r\n                } else {\r\n                    range = [top - windowHeight, top];\r\n                }\r\n\r\n                const animateName = scope.animate;\r\n                result = animationFactory.getAnimation(animateName, el[0], range);\r\n                el.parent().addClass(animateName);\r\n            }\r\n\r\n            calcAnimation();\r\n\r\n            const choreographer = new Choreographer({\r\n                animations: result,\r\n            });\r\n\r\n            function animate() {\r\n                const scrollPosition = (doc.getBoundingClientRect().top - doc.offsetTop) * -1;\r\n                choreographer.runAnimationsAt(scrollPosition);\r\n            }\r\n\r\n            function update() {\r\n                calcAnimation();\r\n                choreographer.updateAnimations(result);\r\n            }\r\n            angular.element($window).on('scroll', animate);\r\n            angular.element($window).on('resize', () => {\r\n                clearTimeout(resizeTimer);\r\n                resizeTimer = setTimeout(() => {\r\n                    update();\r\n                }, 250);\r\n            });\r\n        },\r\n    };\r\n});\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./cwel/service/scroll-animation/scroll-animation.es","'use strict';\n\nvar Choreographer = require('./Choreographer');\nmodule.exports = Choreographer;\n\nwindow.Choreographer = Choreographer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/choreographer-js/dist/index.js\n// module id = 1\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Animation = require('./Animation');\nvar defaultAnimations = require('./defaultAnimations');\n\n// Store a no-op\nvar noop = function noop() {};\n\n/** Choreographer\n  * constructed with a config object with the following keys and values:\n      {Object} customFunctions | [optional] Keys are function names, values are animation functions.\n      {Array} animations       | An array of Animation class config objects.\n **/\n\nvar Choreographer = function () {\n  function Choreographer(config) {\n    var _this = this;\n\n    _classCallCheck(this, Choreographer);\n\n    this.customFunctions = config.customFunctions || {};\n    this.animations = config.animations.map(function (anim) {\n      anim.fn = _this.getAnimationFn(anim.type);\n      return new Animation(anim);\n    });\n  }\n\n  /** Helper to grab a function by its type. First try the defaults, then custom, then no-op.\n    * @param {String} type | the name (or key value) of the animation function.\n   **/\n\n\n  _createClass(Choreographer, [{\n    key: 'getAnimationFn',\n    value: function getAnimationFn(type) {\n      return defaultAnimations[type] || this.customFunctions[type] || noop;\n    }\n\n    /** If you need to update the animation configs at any point.\n      * @param {Array} animations | An array of your new Animation class config objects.\n     **/\n\n  }, {\n    key: 'updateAnimations',\n    value: function updateAnimations(animations) {\n      var _this2 = this;\n\n      // Wipe out the old animations and replace 'em.\n      this.animations = animations.map(function (anim) {\n        anim.fn = _this2.getAnimationFn(anim.type);\n        return new Animation(anim);\n      });\n    }\n\n    /** Run those animations based on a given location!\n      * @param {Number} position | the location marker - could be a scroll location, a timestamp, a mouseX position...\n     **/\n\n  }, {\n    key: 'runAnimationsAt',\n    value: function runAnimationsAt(position) {\n\n      // Clear all the nodes' 'animated' attribute.\n      this.animations.forEach(function (anim) {\n        anim.nodes.forEach(function (node) {\n          return node.setAttribute('animated', '');\n        });\n      });\n\n      // Run and done.\n      this.animations.forEach(function (anim) {\n        return anim.runAt(position);\n      });\n    }\n  }]);\n\n  return Choreographer;\n}();\n\nmodule.exports = Choreographer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/choreographer-js/dist/Choreographer.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** The Animation class.\n  *\n  * constructed with the following config object properties:\n    {String} type     | the name of the animation function\n    {Function} fn     | the animation function\n    {Array} range     | either a one- or two-dimensional array of ranges, i.e. [0,5] or [[0,3], [4,5]]\n    NOTE: Bugs will occur if you overlap animation ranges that affect the same style properties!\n\n    [ Only one of the below (selector or selectors) is necessary. If they both exist, 'selectors' will be used. ]\n    {String} selector | a valid DOM Element selector string, ex. '.classname' or '#box .thing[data-attr=true]'\n    {Array} selectors | an array of selector strings (described above).\n\n    {String} style    | a valid CSS style property.\n    NOTE: If you are using 'transform', follow it with a colon and the property name, ex. 'transform:scaleX'\n\n    {Number} from     | The minimum value to set to the style property. Useful when progressively calculating a value.\n    {Number} to       | The value to set to the style property. (Or the max, when progressively calculating a value.)\n    NOTE: If you are ONLY using the 'to' value, like with a 'change' animation, this could also be {String} to.\n\n    {String} unit     | The unit string to append to the value, ex. '%', 'px', 'deg'\n **/\n\nvar Animation = function () {\n  function Animation(config) {\n    _classCallCheck(this, Animation);\n\n    this.config = config;\n    this.storeNodes();\n  }\n\n  // Either use 'selector' or 'selectors' to find and store all the DOM nodes.\n\n\n  _createClass(Animation, [{\n    key: 'storeNodes',\n    value: function storeNodes() {\n      var _this = this;\n\n      if (this.config.selector) {\n\n        if (typeof this.config.selector === 'string') {\n          this.nodes = Array.prototype.slice.call(document.querySelectorAll(this.config.selector));\n        } else if (this.config.selector.length) {\n          this.nodes = Array.prototype.slice.call(this.config.selector);\n        } else {\n          this.nodes = [this.config.selector];\n        }\n      }\n\n      if (this.config.selectors) {\n        this.nodes = [];\n        this.config.selectors.forEach(function (s) {\n\n          if (typeof s === 'string') {\n            var nodes = Array.prototype.slice.call(document.querySelectorAll(s));\n            _this.nodes = _this.nodes.concat(nodes);\n          } else if (_this.config.selector.length) {\n            _this.nodes = _this.nodes.concat(Array.prototype.slice.call(s));\n          } else {\n            _this.nodes = _this.nodes.push(s);\n          }\n        });\n      }\n    }\n\n    // Just a helper to get the relative location of a value within a range.\n    // example: getProgress(1, [0, 2]) = 0.5\n\n  }, {\n    key: 'getProgress',\n    value: function getProgress(val, _ref) {\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      var min = _ref2[0];\n      var max = _ref2[1];\n\n      return (val - min) / (max - min);\n    }\n\n    /** Returns the 'progress' - relative position within the animation range.\n      * @param {Number} position  | passed in value from 'runAt' (below)\n      * @return {Number} progress | the relative location (between 0 and 1 when in range) within a range.\n                                    if there are multiple ranges and the position is not in any of them,\n                                    return -1. Otherwise, return the value (even if out of range).\n     **/\n\n  }, {\n    key: 'getProgressAt',\n    value: function getProgressAt(position) {\n      // If there are multiple ranges, then figure out which one is relevant and\n      // calculate the progress within that one. You can't have multiple active\n      // ranges unless they're overlapping -- in which case it is YOUR bug, dude.\n      if (_typeof(this.config.range[0]) === 'object') {\n\n        var activeRange = void 0;\n\n        // If there's a range that is active, store it!\n        this.config.range.forEach(function (r) {\n          if (isBetween(postion, r[0], r[1])) activeRange = r;\n        });\n\n        if (!activeRange) return -1;else return this.getProgress(position, activeRange);\n      }\n\n      return this.getProgress(position, this.config.range);\n    }\n\n    /** And this is where all of that work ~finally~ pays off!\n      * This runs the animation by getting the relative progress and running accordingly.\n      * @param {Number} position  | the location marker - could be a scroll location, a timestamp, a mouseX position...\n     **/\n\n  }, {\n    key: 'runAt',\n    value: function runAt(position) {\n      var _this2 = this;\n\n      var progress = this.getProgressAt(position);\n\n      // If we are OUT OF RANGE, then we have to do a few extra things.\n      if (progress < 0 || progress > 1) {\n\n        // First, check if any of our nodes were already animated at this same style prop, at this same location.\n        var animated = void 0;\n        this.nodes.forEach(function (node) {\n          if (node.getAttribute('animated').indexOf(_this2.config.style) > -1) animated = true;\n        });\n\n        // If NOT, then you can go ahead and animate it here.\n        // We need this checkpoint to avoid overriding each other.\n\n        // If you're using class instead of style props, it don't matter.\n        if (this.config.style === 'class' || !animated) {\n          // If it's a simple 'change' function, we just need a value outside of 0 to 1. Could be -9.87. Doesn't matter.\n          if (this.config.type === 'change') progress = -1;\n\n          // If it's a 'scale' function, then get the min or max progress.\n          if (this.config.type === 'scale') {\n            if (progress < 0) progress = 0;\n            if (progress > 1) progress = 1;\n          }\n        } else {\n\n          // If we are OUT OF RANGE and some of our nodes are already animated, then get out of here!!!!\n          return;\n        }\n      }\n\n      // OK, finally ready? Run that animation, baby.\n      this.nodes.forEach(function (node) {\n\n        // If in range ---\n        // (Notice that we're NOT doing >= and <= here. This is because if you're on the edges of the\n        // range, you should be able to override this animation with another one.)\n        if (progress > 0 && progress < 1) {\n          node.setAttribute('animated', node.getAttribute('animated') + '|' + _this2.config.style);\n        }\n\n        _this2.config.fn({\n          node: node,\n          style: _this2.config.style,\n          from: _this2.config.from,\n          to: _this2.config.to,\n          unit: _this2.config.unit,\n          progress: progress\n        });\n      });\n    }\n  }]);\n\n  return Animation;\n}();\n\nmodule.exports = Animation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/choreographer-js/dist/Animation.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nvar getInjectedTransformString = require('./getInjectedTransformString');\n\n/** @method scale\n  * [built-in animation function]\n  * Based on the data provided, your node will receive an updated, scaled style value.\n  *\n  * @param {Object} data : {\n  *          {Node} node       | the node you want to modify\n  *          {String} style    | the style property you want to modify\n  *          {Number} from     | minimum value\n  *          {Number} to       | maximum value\n  *          {Number} progress | a value between 0 and 1; the proportion of value we should use\n  *          {String} unit     | optional - unit value, e.g. 'px' or '%'\n  *        }\n **/\nvar scale = function scale(data) {\n  // Get the relative value (proportional to the min-max range you gave.)\n  var scaledValue = (data.to - data.from) * data.progress + data.from;\n  // Stick on the unit, if there is one.\n  var scaledValueString = data.unit ? scaledValue + data.unit : scaledValue;\n\n  // If it's a regular old style property, just replace the value. No fuss.\n  if (data.style.split(':').length === 1) {\n    data.node.style[data.style] = scaledValueString;\n    return;\n  }\n\n  /*~~ If the style is a CSS transform, we gotta do some funky shit. ~~*/\n  var transformProp = data.style.split(':')[1];\n  data.node.style.transform = getInjectedTransformString(data.node, transformProp, scaledValueString);\n};\n\n/** @method change\n  * [built-in animation function]\n  * Based on the data provided, your node will have the style value assigned or remok\n  * @param {Object} data : {\n  *          {Node} node       | the node you want to modify\n  *          {String} style    | the style property you want to modify\n  *          {Value} to        | the style value (number, string -- whatever valid type this CSS prop takes)\n  *          {Number} progress | a value between 0 and 1; the proportion of value we should use\n  *        }\n **/\nvar change = function change(data) {\n  var newValue = data.progress < 0 ? null : data.to;\n  var newValueString = newValue && data.unit ? newValue + data.unit : newValue;\n\n  // If the progress is less than 0, we just need to nullify this style value.\n  // But, if the style prop is 'transition', apply it only after the last transition ends.\n  if (data.progress < 0 && data.style === 'transition') {\n    data.node.addEventListener('transitionend', function (e) {\n      if (e.target === data.node) data.node.style[data.style] = null;\n    });\n    return;\n  }\n\n  // If it's a regular old style property, just replace the value. No fuss.\n  if (data.style.split(':').length === 1) {\n    if (data.style === 'class') {\n      data.node.classList[newValue ? 'add' : 'remove'](data.to);\n      return;\n    }\n\n    data.node.style[data.style] = newValueString;\n    return;\n  }\n\n  /*~~ If the style is a CSS transform, we gotta do some funky shit. ~~*/\n  var transformProp = data.style.split(':')[1];\n  data.node.style.transform = getInjectedTransformString(data.node, transformProp, newValueString);\n};\n\nmodule.exports = { scale: scale, change: change };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/choreographer-js/dist/defaultAnimations.js\n// module id = 4\n// module chunks = 0","'use strict';\n\nvar translations = {\n  translateX: 0,\n  translateY: 1,\n  translateZ: 2\n};\n\nvar scales = {\n  scaleX: 0,\n  scaleY: 1,\n  scaleZ: 2\n};\n\nvar transformKeys = {\n  'transform': 'transform',\n  'webkitTransform': '-webkit-transform',\n  'MozTransform': '-moz-transform',\n  'msTransform': '-ms-transform',\n  'OTransform': '-o-transform'\n};\n\n// Get the correct transform key value, either plain 'transform' or a prefixed one.\nvar getTransformKey = function getTransformKey() {\n  if (!window.getComputedStyle) return null;\n\n  var el = document.createElement('div');\n  document.body.insertBefore(el, null);\n\n  for (var t in transformKeys) {\n    if (window.getComputedStyle(el)[t]) {\n      document.body.removeChild(el);\n      return t;\n    }\n  }\n\n  document.body.removeChild(el);\n  return null;\n};\n\n// Check if we have 3d support\nvar getHas3d = function getHas3d() {\n  if (!transformKey) return false; // No transform, no 3d. GET A NEW BROWSER YO\n\n  var el = document.createElement('div');\n  document.body.insertBefore(el, null);\n  el.style[transformKey] = 'translate3d(1px,1px,1px)';\n\n  var has3d = !!window.getComputedStyle(el).getPropertyValue(transformKey);\n  document.body.removeChild(el);\n\n  return has3d;\n};\n\n// Cache these values\nvar transformKey = getTransformKey();\nvar has3d = getHas3d();\n\nvar getInjectedTransformString = function getInjectedTransformString(node, prop, val) {\n\n  // If your browser doesn't support even prefixed transforms... get a new browser. Bye.\n  if (!transformKey) return;\n\n  // Get the node's previous transform value and store it.\n  var oldTransformString = node.style[transformKey] || '';\n\n  // set up variable declarations for 3d stuff\n  var transform3dString = void 0;\n  var axis = void 0;\n  var xyz = void 0;\n\n  // If we've got 3d, then USE IT! It's sooo much smoother. #blessed\n  if (has3d) {\n\n    // If it's a translate or scale, we can 3d-ify that. (I know there's some duplication but I'd rather be explicit here.)\n\n    // Axis is the index of the value we'll want to change (X is 0, Y is 1, Z is 3)\n    // Prop is the name of the property\n    // XYZ holds our actual values.\n    if (translations[prop] !== undefined) {\n      axis = translations[prop];\n      prop = 'translate3d';\n      xyz = ['0', '0', '0'];\n      if (val === null) val = 0;\n    } else if (scales[prop] !== undefined) {\n      axis = scales[prop];\n      prop = 'scale3d';\n      xyz = ['1', '1', '1'];\n      if (val === null) val = 1;\n    }\n\n    // If everything checks out, we should have our values set!\n    if (axis !== undefined) {\n      if (oldTransformString.indexOf(prop) > -1) {\n        var startOfString = oldTransformString.split(prop + '(')[0];\n        var extractedValue = oldTransformString.split(prop + '(')[1].split(')')[0];\n        xyz = extractedValue.split(',');\n      }\n\n      // Replace the value in the array, then join that sucker together.\n      xyz[axis] = val;\n      transform3dString = prop + '(' + xyz.join(',') + ')';\n    }\n  }\n\n  // Make a nice new string out of it with the scaled value.\n  var transformInjection = transform3dString || prop + '(' + val + ')';\n\n  var newTransformString = oldTransformString;\n\n  // Check if the new prop is already declared somehow in the old style value\n  var transformPropExists = oldTransformString.indexOf(prop) > -1;\n\n  // Because if it is, you don't want to add another copy.\n  if (transformPropExists) {\n    var _startOfString = oldTransformString.split(prop)[0];\n    var endOfString = oldTransformString.split(prop)[1].split(')')[1];\n    newTransformString = _startOfString + transformInjection + endOfString;\n  }\n  // In the same vein, if it isn't, you can't just replace the value because there might\n  // be some other transform properties hangin' out in there.\n  else newTransformString += ' ' + transformInjection;\n\n  return newTransformString;\n};\n\nmodule.exports = getInjectedTransformString;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/choreographer-js/dist/getInjectedTransformString.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}