{% from macros['property-table'] import propertytable %}

@using Cwel.Web
@model Cwel.Docs.Web.Models.ComponentDocumentationViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles {

}

@section scripts {
    <script src="/Assets/JS/vendor/prism.js"></script>
}

<div class="docs">
    <div class="docs__header">
        <div class="container">
            <h1 class="docs__header-title h1">{{ name }}</h1>
        </div>
    </div>

    <div class="container">
        <div class="docs__section">
            <h2>Summary</h2>
            {% markdown mdFile %}

            <h2>Example</h2>
            <div class="docs-example" ng-init="show='result'">
                <div class="docs-example__nav">
                    <ul class="docs-example__nav-ul">
                        <li class="docs-example__nav-li" ng-class="{ 'docs-example__nav-li--active': show=='result' }">
                            <a class="docs-example__nav-link" ng-click="show='result'">Result</a>
                        </li>
                        <li class="docs-example__nav-li" ng-class="{ 'docs-example__nav-li--active': show=='html' }">
                            <a class="docs-example__nav-link" ng-click="show='html'">HTML</a>
                        </li>
                    </ul>
                </div>
                <div class="docs-example__content docs-example__content--center" ng-show="show=='result'">
                    <iframe height-auto class="docs-example__preview" width="100%" src="/Playground/Render?layout=true&amp;name={{ name }}&amp;type={{ type }}&amp;model={{ modelData | dump | urlencode }}"></iframe>
                </div>
                <div class="docs-example__content" ng-show="show=='html'"><pre ng-non-bindable><code class="highlight html">@Model.Html.Trim()</code></pre></div>
            </div>
        </div>

        <div class="docs__section">
            <h2>Angular Directive</h2>

            <p>Outline of the angular directive for {{ script.name }}. Use the name as an attribute of an element to instantiate the component. For example markup on how to use this component, see the 'HTML' tab in the example above.</p>

            <h3>Name</h3>
            <p><code class="nohighlight">{{ script.name | kebab }}</code></p>

            <h3>Attributes</h3>
            <p>Data attributes used to initialize the directive.</p>
            {{ propertytable(script.attributes, 'No attributes to document...') }}

            {% if script.scope %}
            <h3>Scope</h3>
            <p>Variables and functions available in the angular scope of {{ name }}.</p>
            {{ propertytable(script.scope, 'No scope properties to document...') }}
            {% endif %}
        </div>

        <div class="docs__section">
            <h2>View Model</h2>

            <h3>Type</h3>
            <p><code>{{ vm.name }}</code></p>

            <h3>Summary</h3>
            <p>{{ vm.summary }}</p>

            <h3>Properties</h3>
            {{ propertytable(vm.props, 'No view model properties to document...') }}
        </div>
    </div>
</div>
